
name: Debian package

on:
  push:
    tags:
      - '*'
jobs:
  package:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, ubuntu-20.04, ubuntu-latest, debian-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: |
        sudo apt-get -qq update
        sudo apt-get install -qq -y python3 python3-dev python3-pip python-is-python3
        sudo apt-get install -qq -y build-essential fakeroot devscripts
        sudo apt-get install -qq -y  debhelper dh-python python3-all-dev
    - name: build package
      run: |
        make debian-build
        mkdir package
        mv ../cgwebpy*.deb package/
        echo "deb_package_file=$(ls package/*.deb)" >> $GITHUB_ENV
    - name: artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}-deb
        path: package/*.deb
    - name: create release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.deb_package_file }}
        asset_name: ${{ matrix.os }}_cgwebpy_${{ steps.create_release.outputs.id }}.deb
        asset_content_type: application/octet-stream